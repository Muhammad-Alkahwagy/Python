Python is not commonly used as a primary language for developing embedded systems due to its high-level nature and resource-intensive interpreter.
However, it is still possible to use Python in embedded systems, and there are some Python modules that are particularly useful for this purpose. 

Here are ten Python modules that can be used in embedded systems:

1. RPi.GPIO - This module provides an interface to the GPIO pins on a Raspberry Pi, making it useful for controlling external hardware.

2. PySerial - This module provides a way to communicate with serial devices such as sensors or actuators.

3. PyUSB - This module provides a way to communicate with USB devices connected to the system.

4. smbus - This module provides an interface to the I2C bus, which is a common way to communicate with sensors or other devices in embedded systems.

5. spidev - This module provides an interface to the SPI bus, which is another common way to communicate with sensors or other devices in embedded systems.

6. PyBluez - This module provides a way to communicate with Bluetooth devices connected to the system.

7. picamera - This module provides an interface to the camera module on a Raspberry Pi, making it useful for projects that involve image or video processing.

8. Adafruit CircuitPython - This is a library of Python code that can be used on a variety of microcontroller platforms,
including popular boards like the Arduino and Adafruit's own line of CircuitPython boards.

9. MicroPython - Thisis a stripped-down version of Python that is designed to run on microcontrollers with limited resources,
making it ideal for use in embedded systems.

10. PyFirmata - This module provides a way to communicate with Arduino boards using the Firmata protocol, 
enabling Python code to control the Arduino's inputs and outputs.

Keep in mind that the use of Python in embedded systems is still relatively uncommon, and many embedded systems are developed using lower-level languages 
such as C or assembly.
However, for certain projects or applications, Python can be a useful tool for rapid prototyping or for implementing high-level algorithms.